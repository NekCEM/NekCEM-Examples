c-----------------------------------------------------------------------
c
c     Normally-incident plane wave propagating through a dielectric
c     whose permittivity suddenly changes. For an explanation of the
c     behavior, see Morgenthaler "Velocity modulation of electromagnetic
c     waves".
c
c-----------------------------------------------------------------------
      subroutine userinc(tt,incfhx,incfhy,incfhz,incfex,incfey,incfez)
c-----------------------------------------------------------------------
      implicit none
      include 'SIZE'
      include 'TOTAL'
      include 'EMWAVE'
      include 'RK5'

      common /userparam/ omega
      real omega

      common /userincvars/ incindex,ninc
      integer incindex(lxzfl),ninc

      real tt
      real incfhx(lxzfl),incfhy(lxzfl),incfhz(lxzfl)
      real incfex(lxzfl),incfey(lxzfl),incfez(lxzfl)

      integer i,j,k
      real ky
      real yy,mu,eps,eta,uinc
      real twopi
      parameter (twopi = 8*atan(1.0))

      if (tt.gt.2*twopi/omega) then
         return
      endif

      do i = 1,ninc
         j = incindex(i)
         k = cemface(j)
         yy = ym1(k,1,1,1)
         eps = permittivity(k)
         mu = permeability(k)
         eta = sqrt(mu/eps)
         ky = omega*sqrt(mu*eps)
         uinc = sin(-ky*yy-omega*tt)
         if (ifte) then
            incfhz(j) = incfhz(j)+uinc
            incfex(j) = incfex(j)+eta*uinc
         else
            incfez(j) = incfez(j)+uinc
            incfhx(j) = incfhx(j)-uinc/eta
         endif
      enddo

      return
      end
c-----------------------------------------------------------------------
      subroutine userini(tt,hx,hy,hz,ex,ey,ez)
c-----------------------------------------------------------------------
      implicit none
      include 'SIZE'

      real tt
      real hx(lpts),hy(lpts),hz(lpts)
      real ex(lpts),ey(lpts),ez(lpts)

      return
      end
c-----------------------------------------------------------------------
      subroutine usersol(tt,solhx,solhy,solhz,solex,soley,solez)
c-----------------------------------------------------------------------
      implicit none
      include 'SIZE'

      real tt
      real solhx(lpts),solhy(lpts),solhz(lpts)
      real solex(lpts),soley(lpts),solez(lpts)

      return
      end
c-----------------------------------------------------------------------
      subroutine usersrc(tt,srchx,srchy,srchz,srcex,srcey,srcez)
c-----------------------------------------------------------------------
      implicit none
      include 'SIZE'

      real tt
      real srchx(lpts),srchy(lpts),srchz(lpts)
      real srcex(lpts),srcey(lpts),srcez(lpts)

      return
      end
c-----------------------------------------------------------------------
      subroutine userfsrc(tt,srcfhx,srcfhy,srcfhz,srcfex,srcfey,srcfez)
c-----------------------------------------------------------------------
      implicit none
      include 'SIZE'

      real tt
      real srcfhx(lxzfl),srcfhy(lxzfl),srcfhz(lxzfl)
      real srcfex(lxzfl),srcfey(lxzfl),srcfez(lxzfl)

      return
      end
c-----------------------------------------------------------------------
      subroutine uservp(ix,iy,iz,iel)
c-----------------------------------------------------------------------
      implicit none
      include 'SIZE'
      include 'TOTAL'
      include 'EMWAVE'
      include 'PML'

      common /userparam/ omega  ! frequency of the incident wave
      real omega

      common /userincvars/ incindex,ninc
      integer incindex(lxzfl),ninc

      common /usergeom/ sx,sy
      real sx,sy

c     These don't do anything! This is a temporary measure until
c
c     https://github.com/NekCEM/NekCEM/issues/12
c
c     is resolved.
      integer ix,iy,iz,iel

      logical markinc
      integer e,f,i,j,k,nx1_2

      omega = 5.0

      do i = 1,npts
         permittivity(i) = 1.0
         permeability(i) = 1.0
      enddo

      ninc = 0
      do e = 1,nelt
         do f = 1,nfaces
            markinc = .true.
            do i = 1,nxzf
c     j is the global face number
               j = (e-1)*nxzf*nfaces+nxzf*(f-1)+i
c     k is the volume global number associated with face j.
               k = cemface(j)
               if (abs(ym1(k,1,1,1)-pmlinner(4)).gt.1e-8
     $              .or.pmltag(e).ne.0) then
                  markinc = .false.
                  exit
               endif
            enddo
            if (markinc) then
               do i = 1,nxzf
                  ninc = ninc+1
                  j = (e-1)*nxzf*nfaces+nxzf*(f-1)+i
                  incindex(ninc) = j
               enddo
            endif
         enddo
      enddo

      return
      end
c-----------------------------------------------------------------------
      subroutine usrdat
c-----------------------------------------------------------------------
      implicit none

      return
      end
c-----------------------------------------------------------------------
      subroutine usrdat2
c-----------------------------------------------------------------------
c     Use this subroutine to set the dimensions of the domain.
      implicit none
      include 'SIZE'
      include 'TOTAL'
      include 'EMWAVE'

      common /usergeom/ sx,sy
      real sx,sy

      integer i,n,nxy2
      real glmin,glmax
      real xmid,ymid
      real xmin,ymin,xmax,ymax

      n = nx1*ny1*nz1*nelv

      xmin = glmin(xm1,n)
      xmax = glmax(xm1,n)
      ymin = glmin(ym1,n)
      ymax = glmax(ym1,n)

      sx = 5.0
      sy = 10.0

      do i = 1,n
         xm1(i,1,1,1) = sx*(xm1(i,1,1,1)-xmin)/(xmax-xmin)-(sx/2.0)
         ym1(i,1,1,1) = sy*(ym1(i,1,1,1)-ymin)/(ymax-ymin)-(sy/2.0)
      enddo

      return
      end
c-----------------------------------------------------------------------
      subroutine userchk
c-----------------------------------------------------------------------
      implicit none
      include 'SIZE'
      include 'TOTAL'
      include 'EMWAVE'
      include 'PML'
      include 'RTIMER' 

      common /userlogic/ twomat
      logical twomat

      integer i
      real l2(6),linf(6)
      real l2tol(6),linftol(6)

      if (istep.eq.1000) then
         do i = 1,npts
            permittivity(i) = 2.0
         enddo
         call pml_calc_sigma(pmlinner,pmlouter,pmltag,pmlorder,
     $        pmlreferr)
c     Inverse mass matrix including material constants
         call col3    (ebm1,permittivity,bmn,npts)
         call col3    (hbm1,permeability,bmn,npts)
         call invcol1 (ebm1,npts)
         call invcol1 (hbm1,npts)
         call invers2 (jacmi,jacm1,npts)
      endif

      if (istep.le.10.or.mod(istep,iocomm).eq.0) then
         call usersol
     $     (time,shn(1,1),shn(1,2),shn(1,3),sen(1,1),sen(1,2),sen(1,3))
         call cem_error(hn(1,1),shn(1,1),errhn(1,1),npts,l2(1),linf(1))
         call cem_error(hn(1,2),shn(1,2),errhn(1,2),npts,l2(2),linf(2))
         call cem_error(hn(1,3),shn(1,3),errhn(1,3),npts,l2(3),linf(3))
         call cem_error(en(1,1),sen(1,1),erren(1,1),npts,l2(4),linf(4))
         call cem_error(en(1,2),sen(1,2),erren(1,2),npts,l2(5),linf(5))
         call cem_error(en(1,3),sen(1,3),erren(1,3),npts,l2(6),linf(6))

         call userprint(istep,time,dt,l2,linf,cpu_t,cpu_p_t)
      endif

      return
      end
c-----------------------------------------------------------------------
      subroutine userprint(istep,tt,dt,l2,linf,t1,t2)
c-----------------------------------------------------------------------
      implicit none
      include 'SIZE'

      integer istep
      real tt,dt,t1,t2
      real l2(6),linf(6)

      integer k

      if (nid.eq.0) then
         write(6,101) istep,nelt,nx1-1,npts,tt,dt,(l2(k),k=1,6),t1,t2
         write(6,102) istep,nelt,nx1-1,npts,tt,dt,(linf(k),k=1,6),t1,t2
      endif

 101  format(/,i10,i6,i4,i9,1p9e10.3,e9.2,' CPU: L2')
 102  format(  i10,i6,i4,i9,1p9e10.3,e9.2,' CPU: Linf')

      return
      end
c-----------------------------------------------------------------------
